"use strict";(self.webpackChunklowcode_platform_docs=self.webpackChunklowcode_platform_docs||[]).push([["5630"],{8630:function(e,n,r){r.r(n),r.d(n,{default:()=>a});var d=JSON.parse('{"ic":"/open-react-render-sdk/index.umd.js","H0":"/setter-render/index.umd.js","UK":"/new-playground/index.umd.js"}');let t={};function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{src:n="https://cdn.jsdelivr.net/npm/typescript/lib/typescript.js",globalKey:r="ts"}=e;return window[r]?Promise.resolve():t[n]?t[n]:(t[n]=new Promise((e,d)=>{let o=document.createElement("script");o.setAttribute("data-src",n),o.src=n,o.async=!0,o.onload=()=>{window[r]?(console.log(`${r} loaded and available as window.${r}`),e()):(d(Error(`Failed to load ${r}. Ensure the global variable ${r} is set by the script.`)),delete t[n])},o.onerror=e=>{d(Error(`Failed to load ${r} from ${n}: ${e}`)),delete t[n]},document.body.appendChild(o)}),t[n])}let a={LibSetterRender:async function e(){return await o({src:d.H0||"/setter-render/index.umd.js",globalKey:"SetterRender"}),window.SetterRender},LibOpenReactRenderSdk:async function e(){return await o({src:d.ic||"/open-react-render-sdk/index.umd.js",globalKey:"OpenReactRenderSdk"}),window.OpenReactRenderSdk},LibSchemaOnLinePlayground:async function e(){return await o({src:d.UK||"/new-playground/index.umd.js",globalKey:"SchemaOnLinePlayground"}),window.SchemaOnLinePlayground}}}}]);