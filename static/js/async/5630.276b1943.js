"use strict";(self.webpackChunklowcode_platform_docs=self.webpackChunklowcode_platform_docs||[]).push([["5630"],{8630:function(e,n,r){r.r(n),r.d(n,{default:()=>a});var o=JSON.parse('{"ic":"/open-react-render-sdk/index.umd.js","H0":"/setter-render/index.umd.js","UK":"/new-playground/index.umd.js"}');let d={};function t(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{src:n="https://cdn.jsdelivr.net/npm/typescript/lib/typescript.js",globalKey:r="ts"}=e;return window[r]?Promise.resolve():d[n]?d[n]:(d[n]=new Promise((e,o)=>{let t=document.createElement("script");t.setAttribute("data-src",n),t.src=n,t.async=!0,t.onload=()=>{window[r]?(console.log(`${r} loaded and available as window.${r}`),e()):(o(Error(`Failed to load ${r}. Ensure the global variable ${r} is set by the script.`)),delete d[n])},t.onerror=e=>{o(Error(`Failed to load ${r} from ${n}: ${e}`)),delete d[n]},document.body.appendChild(t)}),d[n])}console.log(o.ic,o.H0,o.UK);let a={LibSetterRender:async function e(){return console.log(o.ic,o.H0,o.UK),await t({src:o.H0||"/setter-render/index.umd.js",globalKey:"SetterRender"}),window.SetterRender},LibOpenReactRenderSdk:async function e(){return console.log(o.ic,o.H0,o.UK),await t({src:o.ic||"/open-react-render-sdk/index.umd.js",globalKey:"OpenReactRenderSdk"}),window.OpenReactRenderSdk},LibSchemaOnLinePlayground:async function e(){return console.log(o.ic,o.H0,o.UK),await t({src:o.UK||"/new-playground/index.umd.js",globalKey:"SchemaOnLinePlayground"}),window.SchemaOnLinePlayground}}}}]);