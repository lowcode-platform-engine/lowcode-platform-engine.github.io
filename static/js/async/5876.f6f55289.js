"use strict";(self.webpackChunklowcode_platform_docs=self.webpackChunklowcode_platform_docs||[]).push([["5876"],{2949:function(e,n,r){r.r(n),r.d(n,{default:function(){return l}});var a=r(2676),o=r(453);function t(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",h3:"h3",ol:"ol",li:"li",pre:"pre",code:"code"},(0,o.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.h1,{id:"一体化部署",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#一体化部署",children:"#"}),"一体化部署"]}),"\n",(0,a.jsx)(n.p,{children:"如果不想单独部署三个服务（引擎后端、管理端、编辑器），这里也提供一体化的部署。"}),"\n",(0,a.jsxs)(n.h2,{id:"容器化部署",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#容器化部署",children:"#"}),"容器化部署"]}),"\n",(0,a.jsxs)(n.h3,{id:"镜像构建",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#镜像构建",children:"#"}),"镜像构建"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"下载克隆代码，执行 bin 目录下的 build.sh 脚本"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"构建镜像"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{meta:"",children:"docker build -t lowcode-integration-platform  .\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"服务启动",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#服务启动",children:"#"}),"服务启动"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"docker 启动服务（将对应的环境变量修改为真实的值）,容器启动后运行在 10009 端口"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{meta:"",children:'docker run -d \\\r\n  --name lowcode-integration-platform \\\r\n  -e MYSQL="127.0.0.1" \\\r\n  -e MYSQL_PORT="3306" \\\r\n  -e MYSQL_USER="root" \\\r\n  -e MYSQL_PASSWORD="password" \\\r\n  -e MYSQL_DATABASE_NAME="b_lowcode_center_database" \\\r\n  -e REDIS="127.0.0.1:6379" \\\r\n  -p 10009:10009 \\\r\n  -p 80:80 \\\r\n  lowcode-integration-platform:latest\r\n\n'})}),"\n",(0,a.jsxs)(n.h2,{id:"k8s-集群",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#k8s-集群",children:"#"}),"K8S 集群"]}),"\n",(0,a.jsxs)(n.h3,{id:"镜像构建-1",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#镜像构建-1",children:"#"}),"镜像构建"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"如上步骤构建镜像后推送到自己的镜像仓库"}),"\n"]}),"\n",(0,a.jsxs)(n.h3,{id:"集群部署",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#集群部署",children:"#"}),"集群部署"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"系定义修改 ymal 配置，尤其是 containers.env 必须配置正确"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ymal",meta:"",children:'apiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n    labels:\r\n        app: lowcode-integration-platform\r\n    name: lowcode-integration-platform\r\n    namespace: gpt\r\nspec:\r\n    replicas: 1\r\n    selector:\r\n        matchLabels:\r\n            app: lowcode-integration-platform\r\n    template:\r\n        metadata:\r\n            labels:\r\n                app: lowcode-integration-platform\r\n        spec:\r\n            containers:\r\n                - env:\r\n                      - name: APP_NAME\r\n                        value: "lowcode-center-server"\r\n                      - name: MYSQL_DATABASE_NAME\r\n                        value: b_lowcode_center_database\r\n                      - name: MYSQL\r\n                        valueFrom:\r\n                            configMapKeyRef:\r\n                                name: server-common-cm\r\n                                key: mysql.host\r\n                      - name: MYSQL_PASSWORD\r\n                        valueFrom:\r\n                            configMapKeyRef:\r\n                                name: server-common-cm\r\n                                key: mysql.password\r\n                      - name: MYSQL_PORT\r\n                        valueFrom:\r\n                            configMapKeyRef:\r\n                                name: server-common-cm\r\n                                key: mysql.port\r\n                      - name: MYSQL_USER\r\n                        valueFrom:\r\n                            configMapKeyRef:\r\n                                name: server-common-cm\r\n                                key: mysql.user\r\n                      - name: REDIS\r\n                        valueFrom:\r\n                            configMapKeyRef:\r\n                                name: server-common-cm\r\n                                key: redis.url\r\n                      - name: REDIS_NAME\r\n                        valueFrom:\r\n                            configMapKeyRef:\r\n                                name: server-common-cm\r\n                                key: redis.name\r\n                      - name: REDIS_POST\r\n                        valueFrom:\r\n                            configMapKeyRef:\r\n                                name: server-common-cm\r\n                                key: redis.port\r\n                  image: 替换成自己的镜像地址\r\n                  imagePullPolicy: IfNotPresent\r\n                  name: lowcode-integration-platform\r\n                  ports:\r\n                      - containerPort: 10009\r\n            imagePullSecrets:\r\n                - name: aliyun-register-pwd\r\n\r\n---\r\napiVersion: v1\r\nkind: Service\r\nmetadata:\r\n    labels:\r\n        app: lowcode-integration-platform\r\n    name: lowcode-integration-platform-service\r\n    namespace: gpt\r\nspec:\r\n    #type: LoadBalancer\r\n    type: NodePort\r\n    ports:\r\n        - name: lowcode-integration-platform-port\r\n          port: 10009\r\n          protocol: TCP\r\n          targetPort: 10009\r\n    selector:\r\n        app: lowcode-integration-platform\r\n\n'})})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,a.jsx)(n,Object.assign({},e,{children:(0,a.jsx)(t,e)})):t(e)}let l=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["deploy%2Fintegration%2Fsummary.mdx"]={toc:[{id:"容器化部署",text:"容器化部署",depth:2},{id:"镜像构建",text:"镜像构建",depth:3},{id:"服务启动",text:"服务启动",depth:3},{id:"k8s-集群",text:"K8S 集群",depth:2},{id:"镜像构建-1",text:"镜像构建",depth:3},{id:"集群部署",text:"集群部署",depth:3}],title:"一体化部署",frontmatter:{}}}}]);